unsetopt case_glob
setopt glob_complete
setopt glob_star_short
setopt mark_dirs

export LESS="-giMQR -j3 --incsearch"
export EDITOR="nvim"
export BROWSER="firefox"

# history
setopt hist_ignore_dups
export HISTFILE=~/.config/zsh/histfile
export SAVEHIST=1000
export HISTSIZE=1000

# proxy
function _proxy-set() {
	export http_proxy="$1"
	export HTTP_PROXY="$http_proxy"
	export https_proxy="$http_proxy"
	export HTTPS_PROXY="$http_proxy"
	export all_proxy="$http_proxy"
	export ALL_PROXY="$http_proxy"
}

function proxy-set() {
	_proxy-set 'http://localhost:7890'
}

function proxy-unset() {
	_proxy-set ''
}

proxy-set

# key binding
typeset -gA key

key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Insert]="${terminfo[kich1]}"
key[Backspace]="${terminfo[kbs]}"
key[Delete]="${terminfo[kdch1]}"
key[Up]="${terminfo[kcuu1]}"
key[Down]="${terminfo[kcud1]}"
key[Left]="${terminfo[kcub1]}"
key[Right]="${terminfo[kcuf1]}"
key[PageUp]="${terminfo[kpp]}"
key[PageDown]="${terminfo[knp]}"
key[Shift-Tab]="${terminfo[kcbt]}"
key[Control-Left]="${terminfo[kLFT5]}"
key[Control-Right]="${terminfo[kRIT5]}"

[[ "${key[Home]}"		]] && bindkey -- "${key[Home]}"			beginning-of-line
[[ "${key[End]}"		]] && bindkey -- "${key[End]}"			end-of-line
[[ "${key[Insert]}"		]] && bindkey -- "${key[Insert]}"		overwrite-mode
[[ "${key[Backspace]}"		]] && bindkey -- "${key[Backspace]}"		backward-delete-char
[[ "${key[Delete]}"		]] && bindkey -- "${key[Delete]}"		delete-char
[[ "${key[Up]}"			]] && bindkey -- "${key[Up]}"			up-line-or-history
[[ "${key[Down]}"		]] && bindkey -- "${key[Down]}"			down-line-or-history
[[ "${key[Left]}"		]] && bindkey -- "${key[Left]}"			backward-char
[[ "${key[Right]}"		]] && bindkey -- "${key[Right]}"		forward-char
[[ "${key[PageUp]}"		]] && bindkey -- "${key[PageUp]}"		beginning-of-buffer-or-history
[[ "${key[PageDown]}"		]] && bindkey -- "${key[PageDown]}"		end-of-buffer-or-history
[[ "${key[Shift-Tab]}"		]] && bindkey -- "${key[Shift-Tab]}"		reverse-menu-complete
[[ "${key[Control-Left]}" 	]] && bindkey -- "${key[Control-Left]}"		backward-word
[[ "${key[Control-Right]}" 	]] && bindkey -- "${key[Control-Right]}"	forward-word

if (( ${+terminfo[smkx]} && ${+terminfo[rmkx]} )); then
	autoload -Uz add-zle-hook-widget
	function zle_application_mode_start { echoti smkx }
	function zle_application_mode_stop { echoti rmkx }
	add-zle-hook-widget -Uz zle-line-init zle_application_mode_start
	add-zle-hook-widget -Uz zle-line-finish zle_application_mode_stop
fi

# zplugin init
ZPLUG_HOME=${XDG_DATA_HOME:-$HOME/.local/share}/zplug
source /usr/share/zsh/scripts/zplug/init.zsh

# plugins
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "zsh-users/zsh-completions", defer:2
zplug "plugins/sudo", from:oh-my-zsh

# zplugin check
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load

# theme
eval "$(starship init zsh)"

# zoxide
eval "$(zoxide init zsh)"

# syntax-highlight
ZSH_HIGHLIGHT_HIGHLIGHTERS+=(brackets pattern cursor)

# ls
source <(dircolors -b)

alias ls='ls -h --color=auto'
alias ll='ls -l'
alias l='ll -A'
alias la='ls -A'

# ffmpeg-normalize
common_args="-t '-18' -tp '-1' -lrt 50 -ar 44100 -c:v copy"
alias mp3-normalize="ffmpeg-normalize $common_args -c:a mp3 -e '-aq 0' -ofmt mp3 -ext mp3";
alias flac-normalize="ffmpeg-normalize $common_args -c:a flac -ofmt flac";

# completion
autoload -U compinit
compinit
zstyle ':completion:*' menu select
zstyle ':completion:*default' list-colors "$LS_COLORS" # LS_COLOR from ls.zsh

# aliases
alias grep="grep -P --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox,.venv,venv}"
alias free='free -h'
alias df='df -h -x tmpfs -x efivarfs -x devtmpfs'

